import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import ReportSection from './ReportSection';
/**
 * Executive Summary section of the due diligence report
 */
const ExecutiveSummarySection = ({ data }) => {
    if (!data)
        return null;
    return (_jsx(ReportSection, { title: "Executive Summary", children: _jsxs("div", { className: "space-y-6", children: [data.summary && (_jsx("div", { children: _jsx("p", { className: "text-lg leading-relaxed", children: data.summary }) })), data.keyHighlights && data.keyHighlights.length > 0 && (_jsxs("div", { className: "mt-4", children: [_jsx("h4", { className: "font-semibold text-gray-700 mb-3", children: "Key Highlights" }), _jsx("div", { className: "grid gap-4 md:grid-cols-2", children: data.keyHighlights.map((highlight, index) => (_jsx("div", { className: "bg-blue-50 p-4 rounded-md", children: _jsx("p", { className: "text-blue-800", children: highlight }) }, index))) })] })), data.investmentThesis && (_jsxs("div", { className: "mt-4", children: [_jsx("h4", { className: "font-semibold text-gray-700 mb-2", children: "Investment Thesis" }), _jsx("div", { className: "bg-gray-50 p-4 rounded-md", children: _jsx("p", { children: data.investmentThesis }) })] })), data.keyMetrics && Object.keys(data.keyMetrics).length > 0 && (_jsxs("div", { className: "mt-4", children: [_jsx("h4", { className: "font-semibold text-gray-700 mb-3", children: "Key Metrics at a Glance" }), _jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: Object.entries(data.keyMetrics).map(([key, value]) => (_jsxs("div", { className: "bg-gray-50 p-3 rounded-md text-center", children: [_jsx("p", { className: "text-sm text-gray-600", children: key }), _jsx("p", { className: "text-lg font-semibold mt-1", children: value })] }, key))) })] })), data.recommendation && (_jsxs("div", { className: "mt-6 bg-primary-50 p-4 rounded-md", children: [_jsx("h4", { className: "font-semibold text-primary-900 mb-2", children: "Recommendation" }), _jsx("p", { className: "text-primary-800 font-medium", children: data.recommendation }), data.targetPrice && (_jsxs("div", { className: "mt-2", children: [_jsx("span", { className: "text-sm text-primary-700", children: "Target Price: " }), _jsx("span", { className: "font-semibold text-primary-900", children: data.targetPrice }), data.upside && _jsxs("span", { className: "ml-2 text-emerald-600", children: ["(+", data.upside, "% upside)"] }), data.downside && _jsxs("span", { className: "ml-2 text-red-600", children: ["(", data.downside, "% downside)"] })] }))] }))] }) }));
};
export default ExecutiveSummarySection;
